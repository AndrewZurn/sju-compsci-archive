/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package csci230radomskizurnhardy;

import java.util.ArrayList;
import java.util.TreeMap;
import org.junit.*;
import static org.junit.Assert.*;

/**
 *
 * @author awzurn
 */
public class AdminControllerTest {
    
    public AdminControllerTest() {
    }

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }
    
    @Before
    public void setUp() {
    }
    
    @After
    public void tearDown() {
    }

    /**
     * Black box test of addUniversity (Use Case #15).  This a rather simple test, as the function 
     * case diagram merely needs to add the University to the database.  To determine if the function 
     * works properly, we will simple find the university within the list of universities in the database.
     */
    @Test
    public void testAddUniversity() {
        System.out.println("addUniversity");
        String school = "RadomskiHardyZurnUniversityTest";
        String state = "Minnesota";
        String location = "Urban";
        String control = "State";
        int numberOfStudents = 15000;
        double percentFemales = 55.0;
        double SATVerbal = 1100.0;
        double SATMath = 1100.00;
        double expenses = 20500.0;
        double percentFinancialAid = 70.0;
        int numberOfApplicants = 7500;
        double percentAdmitted = 55.0;
        double percentEnrolled = 90.0;
        int academicsScale = 5;
        int socialScale = 5;
        int qualityOfLifeScale = 5;
        AdminController.addUniversity(school, state, location, control, numberOfStudents,
                percentFemales, SATVerbal, SATMath, expenses, percentFinancialAid, numberOfApplicants,
                percentAdmitted, percentEnrolled, academicsScale, socialScale, qualityOfLifeScale);
        University university = new University(school, state, location, control, numberOfStudents,
                percentFemales, SATVerbal, SATMath, expenses, percentFinancialAid, numberOfApplicants,
                percentAdmitted, percentEnrolled, academicsScale, socialScale, qualityOfLifeScale);
        boolean truth = false;
        ArrayList<University> uniList = AdminController.getAllUniversities();
        if(uniList.contains(university)){
            truth = true;
        }
        else{
            truth = false;
        }
        assertTrue("The University was added to the database.", truth);  
    }

    /**
     * Black box test of addUniversityEmphasis method (Use Case 15/16), of class AdminController.  Another
     * rather simple test, this will add an emphasis to a given university, and then determine if the
     * emphasis was successfully added to that university.
     */
    @Test
    public void testAddUniversityEmphasis() {
        System.out.println("addUniversityEmphasis");
        String school = "RadomskiHardyZurnUniversityTest";
        String emphasis = "Computer Science";
        AdminController.addUniversityEmphasis(school, emphasis);
        ArrayList<University> universities = AdminController.getAllUniversities();
        boolean truth = false;
        for(University uni: universities){
            if(uni.getSchool().equals(("RadomskiHardyZurnUniversityTest"))){
                if(uni.getEmphases().contains("Computer Science")){
                    truth = true;
                }
                else{
                    truth = false;
                }
            } 
        }
        assertTrue("Use Case 16 - functionality: An emphasis has been added to the university.", truth);
    }

    /**
     * Test of addUser method, of class AdminController.
     */
    @Test
    public void testAddUser() {
        System.out.println("addUser");
        String firstName = "";
        String lastName = "";
        String username = "";
        String password = "";
        char type = ' ';
        AdminController.addUser(firstName, lastName, username, password, type);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of deactivateUser method, of class AdminController.
     */
    @Test
    public void testDeactivateUser_int() {
        System.out.println("deactivateUser");
        int Id = 0;
        AdminController.deactivateUser(Id);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of deactivateUser method, of class AdminController.
     */
    @Test
    public void testDeactivateUser_String() {
        System.out.println("deactivateUser");
        String username = "";
        AdminController.deactivateUser(username);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Black box test of editUniversity method (Use Case #16), of class AdminController.  This is a rather
     * simple test, that will edit the university, see if the university still exists within the database,
     * and then determine if the fields that were edit, were indeed edited to the wanted correction.
     * In this case, the STATE, NUMBER OF STUDENTS, EXPENSES, and ACADEMIC SCALE will be altered.
     */
    @Test
    public void testEditUniversity() {
        System.out.println("editUniversity");
        String school = "RadomskiHardyZurnUniversityTest";
        String state = "Iowa";
        String location = "Urban";
        String control = "State";
        int numberOfStudents = 10000;
        double percentFemales = 55.0;
        double SATVerbal = 1100.0;
        double SATMath = 1100.00;
        double expenses = 15500.0;
        double percentFinancialAid = 70.0;
        int numberOfApplicants = 7500;
        double percentAdmitted = 55.0;
        double percentEnrolled = 90.0;
        int academicsScale = 3;
        int socialScale = 5;
        int qualityOfLifeScale = 5;
        AdminController.editUniversity(school, state, location, control, numberOfStudents,
                percentFemales, SATVerbal, SATMath, expenses, percentFinancialAid, numberOfApplicants,
                percentAdmitted, percentEnrolled, academicsScale, socialScale, qualityOfLifeScale);
        ArrayList<University> universities = AdminController.getAllUniversities();
        boolean truth = false;
        for(University uni: universities){
            if(uni.getSchool().equals(("RadomskiHardyZurnUniversityTest"))){
                if(uni.getState().equals("Iowa") && uni.getNumberOfStudents() == 10000 &&
                        uni.getExpenses() == 15500.0 && uni.getAcademicsScale() == 3){
                    truth = true;
                }
                else{
                    truth = false;
                }
            }
        }
        assertTrue("Use Case 16: The changes have been made to the university.", truth);
    }

    /**
     * Test of editUniversityEmphases method, of class AdminController.
     */
    @Test
    public void testEditUniversityEmphases() {
        System.out.println("editUniversityEmphases");
        String school = "";
        ArrayList<String> emphases = null;
        AdminController.editUniversityEmphases(school, emphases);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of editUser method, of class AdminController.
     */
    @Test
    public void testEditUser() {
        System.out.println("editUser");
        String username = "";
        String firstName = "";
        String lastName = "";
        String password = "";
        AdminController.editUser(username, firstName, lastName, password);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of editUserByAdmin method, of class AdminController.
     */
    @Test
    public void testEditUserByAdmin() {
        System.out.println("editUserByAdmin");
        String username = "";
        String firstName = "";
        String lastName = "";
        String password = "";
        char type = ' ';
        char status = ' ';
        AdminController.editUserByAdmin(username, firstName, lastName, password, type, status);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getAllPossibleEmphases method, of class AdminController.
     */
    @Test
    public void testGetAllPossibleEmphases() {
        System.out.println("getAllPossibleEmphases");
        ArrayList expResult = null;
        ArrayList result = AdminController.getAllPossibleEmphases();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getAllSavedSchools method, of class AdminController.
     */
    @Test
    public void testGetAllSavedSchools() {
        System.out.println("getAllSavedSchools");
        TreeMap expResult = null;
        TreeMap result = AdminController.getAllSavedSchools();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getAllUniversities method, of class AdminController.
     */
    @Test
    public void testGetAllUniversities() {
        System.out.println("getAllUniversities");
        ArrayList expResult = null;
        ArrayList result = AdminController.getAllUniversities();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getAllUniversityNamesWithEmphases method, of class AdminController.
     */
    @Test
    public void testGetAllUniversityNamesWithEmphases() {
        System.out.println("getAllUniversityNamesWithEmphases");
        TreeMap expResult = null;
        TreeMap result = AdminController.getAllUniversityNamesWithEmphases();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getAllUsers method, of class AdminController.
     */
    @Test
    public void testGetAllUsers() {
        System.out.println("getAllUsers");
        ArrayList expResult = null;
        ArrayList result = AdminController.getAllUsers();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getSpecificUser method, of class AdminController.
     */
    @Test
    public void testGetSpecificUser_Integer() {
        System.out.println("getSpecificUser");
        Integer Id = null;
        User expResult = null;
        User result = AdminController.getSpecificUser(Id);
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getSpecificUser method, of class AdminController.
     */
    @Test
    public void testGetSpecificUser_String() {
        System.out.println("getSpecificUser");
        String username = "";
        User expResult = null;
        User result = AdminController.getSpecificUser(username);
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of login method, of class AdminController.
     */
    @Test
    public void testLogin() {
        System.out.println("login");
        String username = "";
        String givenPassword = "";
        boolean expResult = false;
        boolean result = AdminController.login(username, givenPassword);
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of main method, of class AdminController.
     */
    @Test
    public void testMain() {
        System.out.println("main");
        String[] args = null;
        AdminController.main(args);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }
}
